name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get repository info for GitHub Pages
        id: repo-info
        run: |
          REPO_OWNER=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')
          REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')

          # Check if this is a user/org page (repo name is username.github.io)
          if [[ "$REPO_NAME" == "$REPO_OWNER.github.io" ]]; then
            echo "IS_USER_PAGE=true" >> $GITHUB_ENV
            echo "PUBLIC_PATH=/" >> $GITHUB_ENV
          else
            echo "IS_USER_PAGE=false" >> $GITHUB_ENV
            echo "PUBLIC_PATH=/$REPO_NAME/" >> $GITHUB_ENV
          fi

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Create webpack config for GitHub Pages
        run: |
          cat > webpack.gh-pages.js << 'EOF'
          const config = require('./webpack.config.js');

          config.output.publicPath = '${PUBLIC_PATH}';

          module.exports = config;
          EOF

          # Replace ${PUBLIC_PATH} with the actual path
          sed -i "s#\${PUBLIC_PATH}#$PUBLIC_PATH#g" webpack.gh-pages.js

      - name: Build
        run: |
          # Create a production build with the GitHub Pages config
          NODE_ENV=production npx webpack --config webpack.gh-pages.js --mode production

          # Create .nojekyll file to disable Jekyll processing
          touch dist/.nojekyll

          # Ensure index.html exists in the dist directory
          if [ ! -f "dist/index.html" ]; then
            echo "Error: index.html was not generated in the dist directory"
            exit 1
          fi

      - name: Copy assets to dist
        run: |
          if [ -d "public/assets" ]; then
            mkdir -p dist/assets
            cp -r public/assets/* dist/assets/
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
